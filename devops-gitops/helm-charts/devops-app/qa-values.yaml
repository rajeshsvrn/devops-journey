# QA Environment Configuration - values-qa.yaml
# This file contains QA-specific overrides for your base values.yaml

# Global configuration overrides for QA
global:
  namespace: qa
  imageRegistry: "devopsjourney.azurecr.io" # Same registry as develop
  imageTag: "latest" # QA gets latest builds for testing
  environment: qa

  # Same image pull secrets as develop
  imagePullSecrets:
    - name: acr-admin-creds

  # Standard labels for QA
  labels:
    app.kubernetes.io/name: devops-app
    app.kubernetes.io/part-of: enterprise-platform
    app.kubernetes.io/managed-by: helm
    environment: qa

# Backend configuration for QA
backend:
  # Same as develop but with QA-specific overrides
  enabled: true
  name: backend

  image:
    repository: "devops-backend" # Same repo as develop
    tag: "v8" # Same version as develop initially
    pullPolicy: IfNotPresent

  # Same replica count as develop
  replicaCount: 2

  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "5000"
      prometheus.io/path: "/metrics"

  # Same resources as develop
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  # QA-specific configuration
  config:
    nodeEnv: "qa"
    port: "5000"
    dbName: "devops-app-qa"
    logLevel: "info"

  # Same Jaeger configuration as develop
  jaeger:
    enabled: true
    serviceName: "backend-service-qa"
    agentHost: "jaeger-agent.monitoring.svc.cluster.local"
    agentPort: "6831"
    samplerType: "const"
    samplerParam: "1"

  # Same secrets configuration as develop
  secrets:
    enabled: true
    jwtSecretKey: "JWT_SECRET"
    mongoUriKey: "MONGODB_URI"

  # Same security context as develop
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

  # Same service account as develop
  serviceAccount:
    name: backend-sa-qa

# Frontend configuration for QA
frontend:
  enabled: true
  name: frontend

  image:
    repository: "devops-frontend" # Same repo as develop
    tag: "v10" # Same version as develop initially
    pullPolicy: IfNotPresent

  # Same replica count as develop
  replicaCount: 2

  service:
    type: ClusterIP
    port: 80
    targetPort: 80
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "80"
      prometheus.io/path: "/metrics"

  # Same resources as develop
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

  # QA-specific API URL
  config:
    apiUrl: "http://backend:5000/api"

  # Same Jaeger configuration as develop
  jaeger:
    enabled: true
    serviceName: "frontend-service-qa"
    agentHost: "jaeger-agent.monitoring"
    agentPort: "6831"
    samplerType: "const"
    samplerParam: "1"

  # Custom nginx configuration
  customNginxConfig: true

  # Same health checks as develop
  healthCheck:
    livenessPath: "/"
    readinessPath: "/"
    initialDelaySeconds: 30
    readinessInitialDelay: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  # Same security context as develop (disabled)
  securityContext:
    enabled: false # Same as develop
    runAsNonRoot: true
    runAsUser: 101
    runAsGroup: 101
    fsGroup: 101

  # Same service account as develop
  serviceAccount:
    name: frontend-sa-qa

# MongoDB configuration for QA
mongodb:
  enabled: true
  name: mongodb

  image:
    repository: "mongo" # Same repo as develop
    tag: "6.0" # Same version as develop
    pullPolicy: IfNotPresent

  # Same replica count as develop
  replicaCount: 1

  service:
    type: ClusterIP
    port: 27017
    targetPort: 27017
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "27017"
      prometheus.io/path: "/metrics"

  # QA-specific database configuration
  config:
    database: "devops-app-qa"

  # Same persistence configuration as develop (disabled)
  persistence:
    enabled: false # Same as develop - using emptyDir
    storageClass: "manual"
    size: "5Gi"
    reclaimPolicy: "Retain"
    hostPath: "/mnt/data/mongodb"

  # Same resources as develop
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  # Same security context as develop
  securityContext:
    runAsNonRoot: true
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false # MongoDB needs to write to /tmp
    runAsNonRoot: true
    runAsUser: 999
    runAsGroup: 999
    capabilities:
      drop:
        - ALL

  # Same service account as develop
  serviceAccount:
    name: mongodb-sa-qa

# Ingress configuration for QA
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

  hosts:
    - host: "qaraj.duckdns.org" # QA-specific domain
      paths:
        - path: "/api(/|$)(.*)"
          pathType: ImplementationSpecific
          backend: backend
        - path: "/(.*)"
          pathType: ImplementationSpecific
          backend: frontend

  tls:
    - hosts:
        - "qaraj.duckdns.org"
      secretName: "devops-qa-tls"

# Monitoring configuration for QA - keep same as develop
monitoring:
  enabled: true

  # Same ServiceMonitor configuration as develop
  serviceMonitor:
    enabled: false # Same as develop
    interval: "30s"
    path: "/metrics"

  # Same Prometheus configuration as develop
  prometheus:
    enabled: false # Same as develop
    image:
      repository: "prom/prometheus"
      tag: "v2.45.0"
    resources:
      requests:
        memory: "512Mi"
        cpu: "200m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    persistence:
      enabled: false
      size: "10Gi"
      storageClass: "standard"
    retention: "15d"
    scrapeInterval: "15s"
    evaluationInterval: "15s"

  # Same Grafana configuration as develop
  grafana:
    enabled: false # Same as develop
    image:
      repository: "grafana/grafana"
      tag: "10.0.0"
    adminPassword: "admin123"
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "300m"
    persistence:
      enabled: false
      size: "5Gi"
      storageClass: "standard"

  # Same Loki configuration as develop
  loki:
    enabled: false # Same as develop
    image:
      repository: "grafana/loki"
      tag: "2.9.0"
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "300m"
    persistence:
      enabled: false
      size: "10Gi"
      storageClass: "standard"

  # Same Promtail configuration as develop
  promtail:
    enabled: false # Same as develop
    image:
      repository: "grafana/promtail"
      tag: "2.9.0"
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "200m"

# Network Policy configuration - same as develop
networkPolicy:
  enabled: false # Same as develop
  dnsNamespace: "kube-system"
  ingressNamespace: "ingress-nginx"
  allowExternalEgress: true

# RBAC configuration - same as develop
rbac:
  create: true

# Pod Security Standards - same as develop
podSecurityStandards:
  enabled: false # Same as develop
  enforce: "restricted"
  audit: "restricted"
  warn: "restricted"

# Gatekeeper - same as develop
gatekeeper:
  enabled: false # Same as develop

# Autoscaling configuration - same as develop
autoscaling:
  enabled: false # Same as develop
  backend:
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 180
          - type: Percent
            value: 10
            periodSeconds: 60
      scaleUp:
        stabilizationWindowSeconds: 0
        policies:
          - type: Pods
            value: 2
            periodSeconds: 60
          - type: Percent
            value: 50
            periodSeconds: 60
  frontend:
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Resource Quota configuration - same as develop
resourceQuota:
  enabled: false # Same as develop
  hard:
    requests.cpu: "4"
    requests.memory: "8Gi"
    limits.cpu: "8"
    limits.memory: "16Gi"
    persistentvolumeclaims: "10"
    services: "10"
    secrets: "10"
    configmaps: "10"

# LimitRange - same as develop
limitRange:
  enabled: false # Same as develop
  pod:
    maxCpu: "2"
    maxMemory: "4Gi"
    minCpu: "10m"
    minMemory: "16Mi"
  container:
    maxCpu: "1"
    maxMemory: "2Gi"
    minCpu: "10m"
    minMemory: "16Mi"
    defaultCpu: "100m"
    defaultMemory: "128Mi"
    defaultRequestCpu: "50m"
    defaultRequestMemory: "64Mi"
  pvc:
    maxStorage: "10Gi"
    minStorage: "1Gi"

# PodDisruptionBudget - same as develop
podDisruptionBudget:
  enabled: false # Same as develop
  backend:
    minAvailable: 1
  frontend:
    minAvailable: 1
  mongodb:
    minAvailable: 1

# Certificate Manager - same as develop
certManager:
  enabled: false # Same as develop
  clusterIssuer:
    create: false
    name: letsencrypt-prod
    email: "rajeshsvrn@gmail.com"
    server: "https://acme-v02.api.letsencrypt.org/directory"
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      - http01:
          ingress:
            class: nginx
