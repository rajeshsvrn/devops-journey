{{- if and .Values.monitoring.enabled .Values.monitoring.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devops-app.fullname" . }}-prometheus-config
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "devops-app.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.monitoring.prometheus.scrapeInterval | default "15s" }}
      evaluation_interval: {{ .Values.monitoring.prometheus.evaluationInterval | default "15s" }}

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Node metrics
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

      # Application services
      {{- if .Values.backend.enabled }}
      - job_name: '{{ .Values.backend.name }}'
        static_configs:
          - targets: ['{{ include "devops-app.fullname" . }}-backend:{{ .Values.backend.service.port }}']
        metrics_path: '/metrics'
      {{- end }}

      {{- if .Values.frontend.enabled }}
      - job_name: '{{ .Values.frontend.name }}'
        static_configs:
          - targets: ['{{ include "devops-app.fullname" . }}-frontend:{{ .Values.frontend.service.port }}']
        metrics_path: '/metrics'
      {{- end }}

      # Service discovery for services with prometheus annotations
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
{{- end }}