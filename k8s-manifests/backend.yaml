apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      imagePullSecrets:
        - name: acr-admin-creds
      containers:
        - name: backend
          image: devopsjourney.azurecr.io/devops-backend:v6
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: backend-config
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: JWT_SECRET
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: MONGODB_URI
            # Jaeger Tracing Configuration
            - name: JAEGER_SERVICE_NAME
              value: "backend-service"
            - name: JAEGER_AGENT_HOST
              value: "jaeger-agent.monitoring.svc.cluster.local"
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      serviceAccountName: backend-sa
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: dev
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: backend
  ports:
    - port: 5000
      targetPort: 5000
  type: ClusterIP
