# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: frontend-config
#   namespace: dev
# data:
#   nginx.conf: |
#     server {
#         listen 80;
#         server_name localhost;

#         root /usr/share/nginx/html;
#         index index.html;

#         location / {
#             try_files $uri /index.html;
#         }

#         location /health {
#             access_log off;
#             return 200 "healthy\n";
#             add_header Content-Type text/plain;
#         }

#         location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
#             expires 1y;
#             add_header Cache-Control "public, immutable";
#         }
#     }

# Custom nginx config to work with read-only filesystem
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: dev
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        # Set temp directories to writable locations
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path /tmp/proxy_temp_path;
        fastcgi_temp_path /tmp/fastcgi_temp;
        uwsgi_temp_path /tmp/uwsgi_temp;
        scgi_temp_path /tmp/scgi_temp;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Handle React routing
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
