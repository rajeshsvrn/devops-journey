apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      #   securityContext:
      #     runAsNonRoot: true
      #     runAsUser: 101
      #     runAsGroup: 101
      #     fsGroup: 101
      #     seccompProfile:
      #       type: RuntimeDefault

      imagePullSecrets:
        - name: acr-admin-creds # Ensure this secret exists for ACR authentication
      containers:
        - name: frontend
          image: devopsjourney.azurecr.io/devops-frontend:v7 # Update with your image
          ports:
            - containerPort: 80

          env:
            - name: REACT_APP_API_URL
              value: "http://backend:5000/api"
            # Jaeger configuration (consistent with backend)
            - name: JAEGER_SERVICE_NAME
              value: "frontend-service"
            - name: JAEGER_AGENT_HOST
              value: "jaeger-agent.monitoring"
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "1"

            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: false
            #   runAsNonRoot: true
            #   runAsUser: 101
            #   runAsGroup: 101
            #   capabilities:
            #     drop:
            #       - ALL
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

      serviceAccountName: frontend-sa
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: dev
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
